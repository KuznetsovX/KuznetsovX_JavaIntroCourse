package com.kuznetsov.homework10;

public class Main {

    /*
    1. Создать случайную перестановку (random permutation). Например: прямая перестановка длины 5 будет {0, 1, 2, 3, 4}. Случайная будет {1, 0, 4, 3, 2}.
    2. Создать функцию, которая проверяет, может ли массив быть перестановкой. Например: {0, 1}, {2, 3, 0, 1}, {0} правильные. {2}, {1, 2}, {3, 8} неправильные.
    3. Создать метод applyPermutation(int[] arr, int[] perm), который будет применять перестановку.
    4. Добавить в реализацию BinarySearchTree контракт ISortedStringSet и реализовать методы. Проверить работоспособность на словаре украинского, русского или английского языка. Словарь нужно уметь сформировать за O(n*log(n)), где n - количество слов в словаре. Например: сколько слов начинаются на “а”, “аб”, “пе” и тп.
    5. * Написать метод, который считает максимальную глубину дерева.
    6. * Сделать таблицу, которая показывает, за сколько работает каждый запрос. Например: вставка, в лучшем за O(1). В среднем за O(log(n)). И в худшем O(n).
    7. * Сделать 2 реализации дерева. Полностью итеративную и полностью рекурсивную. Сравнить их фактическое время работы в миллисекундах.
    8. * Создать идеальную перестановку, которую, если применить к словарю и загнать его в дерево - его высота будет минимальна.
    */

    public static void main(String[] args) {
        //BinaryTree binaryTree = new BinaryTree();
        //(>*_*)> Write your code here <(*_*<)
    }
}
