package com.kuznetsov.homework11;

public class Main {

    /*
    1. Вывести самый распространенный символ в строке. Например, для “abcdabbb” вывести b. Если несколько символов встречаются одинаковое кол раз - вывести любой.
    2. Вывести индексы самого распространенного символа в строке. Например, для “abcdabbb” вывести b : {0, 5, 6, 7}. Если несколько символов встречаются одинаковое кол раз - вывести любой.
    3. Вывести топ 10 самый частых слов в романе на англ. языке. (В английском нет падежей, так проще). Роман на выбор.
    4.* Создать класс OrderedHashTable. Реализовать IMap. Создать конструктор, который принимает boolean rememberReads.
    Добавить в Node {Node after; Node before;}
        1) rememberReads = false. Такая структура должна выводить множество в том порядке в котором в нее добавляли.
        2) rememberReads = true. Такая структура должна выводить множество в том порядке в котором в нее добавляли. + Если из нее читали значение, то-то что мы читали должно быть в конце, как последний просмотренный.
    5. * Использовать структуру из прошлой задачи. У вас есть аккаунт в телеграмме. Вам приходят n сообщений в следующем порядке.
        “Ivan” -> “hello, what’s up”
        “jane” -> “do you like this film?”
        “Ivan” -> “can I borrow money?”
        “jane” -> “do you like this film?”
        “Ivan” -> “for startup”
        “dima” -> “where is HW?”
        “dima” -> “where is HW???”
        “Ivan” -> “coffee?”
        “Ivan” -> “will explain”
        Как будет выглядеть список ваших чатов? Написать больше вариантов.
    6. * Создать модификацию OrderedHashTable следующим образом. rememberReads = true должен быть по умолчанию. Максимальный размер этого множества задается в конструкторе. Если например размер максимальный 12, то при добавлении 13 го добавляем его и УДАЛЯЕМ ТОТ КОТОРЫЙ МЫ ДОБАВЛЯЛИ ИЛИ, ЧИТАЛИ очень давно.  Назвать ее LeastRecentlyUsedCache (LRUCache).
    7. * У вас есть аккаунт в телеграмме. Недавно использованные стикеры справа пустые. Вы начинаете отправлять друзьям след стикеры.
        “cat”, “dog”, “happy”, “dog”, “dog”, “cat”, “monobank”, “persik”, “monobank”
    Обратите внимание, что вы отправили например 50 УНИКАЛЬНЫХ стикеров. Но у вас вправо ТОЛЬКО 20. И когда вы используете тот которого там не было он появится самым ПЕРВЫМ. Когда вы используете тот что там уже есть он станет на ПЕРВОЕ место.
    Задача. С использованием LRUCacheMap вывести по списку использованных стикеров, то как выглядят ваши последние использованные стикеры.
    */

    public static void main(String[] args) {
        //HashTable hashTable = new HashTable();
        //(>*_*)> Write your code here <(*_*<)
    }
}
